package Vistas;

import Controlador.ProductoBL;
import Modelo.Insumo;
import Modelo.InsumoxProducto;
import Modelo.Producto;
import Modelo.TipoProductoG;
import Modelo.UnidadDeMedida;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author alulab14
 */
public class GestionarProducto extends javax.swing.JFrame {

    private final ArrayList<Insumo> listaInsumos;
    private Insumo seleccionInsumo;
    private Producto producto;
    private ProductoBL LogicaNegocio;
    private int accion = 1;
    double precio = 0;
    private final int ESTADO_HABILITAR  = 1;
    private final int ESTADO_DESHABILITAR  = 2;
    private final int ESTADO_LIMPIAR  = 3;

    //accion: 0=nuevo; 1=modificar; 2=eliminar.
    public void leerInsumosXproducto() {
        DefaultTableModel modelo = (DefaultTableModel) TablaInsumosxProducto.getModel();
        int n = TablaInsumosxProducto.getRowCount();
        for (int i = 0; i < n; i++) {
            InsumoxProducto ip = new InsumoxProducto((int) TablaInsumosxProducto.getValueAt(i, 0),
                    (String) TablaInsumosxProducto.getValueAt(i, 1),
                    (int) TablaInsumosxProducto.getValueAt(i, 2));
            producto.insertarInsumos(ip);
        }
    }

    public GestionarProducto() throws Exception {
        initComponents();
        LogicaNegocio = new ProductoBL();
        listaInsumos = new ArrayList<>();
        Estado(ESTADO_DESHABILITAR);

        cmbTipo.removeAllItems();
        ArrayList<TipoProductoG> listaProd = LogicaNegocio.listarTipoProducto();
        for (TipoProductoG tp : listaProd) {
            cmbTipo.addItem(tp);
        }
        cmbUnidad.removeAllItems();
        ArrayList<UnidadDeMedida> listaUn = LogicaNegocio.listarUnidades();
        for (UnidadDeMedida u : listaUn) {
            cmbUnidad.addItem(u);
        }
        cmbTalla.removeAllItems();
        cmbTalla.addItem("S");
        cmbTalla.addItem("M");
        cmbTalla.addItem("L");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DescripcionText = new javax.swing.JTextField();
        PrecioText = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        Precio = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        StockText = new javax.swing.JTextField();
        SeleccionarInsumos = new javax.swing.JPanel();
        CantidadInsumoText = new javax.swing.JTextField();
        lblCantidadI = new javax.swing.JLabel();
        InsertarInsumoBoton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaInsumosxProducto = new javax.swing.JTable();
        SelecInsumoBtn = new javax.swing.JButton();
        lblInsumoSeleccionado = new javax.swing.JLabel();
        eliminarInsBtn = new javax.swing.JButton();
        modificarInsBtn = new javax.swing.JButton();
        lblUnidadDeMedida = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        lblColor = new javax.swing.JLabel();
        lblTalla = new javax.swing.JLabel();
        colorText = new javax.swing.JTextField();
        cmbTalla = new javax.swing.JComboBox<>();
        cmbTipo = new javax.swing.JComboBox<>();
        lblTipo = new javax.swing.JLabel();
        lblUnidad = new javax.swing.JLabel();
        cmbUnidad = new javax.swing.JComboBox<>();
        lblDescripcion = new javax.swing.JLabel();
        nombreText = new javax.swing.JTextField();
        guardarBtn = new javax.swing.JButton();
        lblPrecioSugerido = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        NuevoBtn = new javax.swing.JButton();
        BuscarBtn = new javax.swing.JButton();
        EliminarBtn = new javax.swing.JButton();
        CancelarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Producto");

        DescripcionText.setAutoscrolls(false);
        DescripcionText.setEnabled(false);

        PrecioText.setAutoscrolls(false);
        PrecioText.setEnabled(false);
        PrecioText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PrecioTextKeyTyped(evt);
            }
        });

        lblNombre.setText("Nombre");

        Precio.setText("Precio");

        lblStock.setText("Stock Actual");

        StockText.setAutoscrolls(false);
        StockText.setEnabled(false);

        SeleccionarInsumos.setBorder(javax.swing.BorderFactory.createTitledBorder("Insumos"));

        CantidadInsumoText.setEnabled(false);
        CantidadInsumoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CantidadInsumoTextKeyPressed(evt);
            }
        });

        lblCantidadI.setText("Cantidad");

        InsertarInsumoBoton.setText("Insertar Insumo");
        InsertarInsumoBoton.setEnabled(false);
        InsertarInsumoBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InsertarInsumoBotonMouseClicked(evt);
            }
        });

        TablaInsumosxProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Cantidad Necesaria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablaInsumosxProducto);
        if (TablaInsumosxProducto.getColumnModel().getColumnCount() > 0) {
            TablaInsumosxProducto.getColumnModel().getColumn(0).setResizable(false);
            TablaInsumosxProducto.getColumnModel().getColumn(0).setPreferredWidth(15);
            TablaInsumosxProducto.getColumnModel().getColumn(1).setResizable(false);
            TablaInsumosxProducto.getColumnModel().getColumn(2).setResizable(false);
        }

        SelecInsumoBtn.setText("Seleccionar");
        SelecInsumoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelecInsumoBtnMouseClicked(evt);
            }
        });

        eliminarInsBtn.setText("Eliminar");
        eliminarInsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarInsBtnActionPerformed(evt);
            }
        });

        modificarInsBtn.setText("Modificar");
        modificarInsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarInsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SeleccionarInsumosLayout = new javax.swing.GroupLayout(SeleccionarInsumos);
        SeleccionarInsumos.setLayout(SeleccionarInsumosLayout);
        SeleccionarInsumosLayout.setHorizontalGroup(
            SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeleccionarInsumosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SeleccionarInsumosLayout.createSequentialGroup()
                        .addComponent(SelecInsumoBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCantidadI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CantidadInsumoText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUnidadDeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertarInsumoBoton))
                    .addGroup(SeleccionarInsumosLayout.createSequentialGroup()
                        .addComponent(lblInsumoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 122, Short.MAX_VALUE))
                    .addGroup(SeleccionarInsumosLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modificarInsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarInsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        SeleccionarInsumosLayout.setVerticalGroup(
            SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeleccionarInsumosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCantidadI)
                        .addComponent(CantidadInsumoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InsertarInsumoBoton)
                        .addComponent(SelecInsumoBtn))
                    .addComponent(lblUnidadDeMedida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInsumoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SeleccionarInsumosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SeleccionarInsumosLayout.createSequentialGroup()
                        .addComponent(eliminarInsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modificarInsBtn)))
                .addGap(270, 270, 270))
        );

        lblCodigo.setText("Codigo");

        idText.setEditable(false);
        idText.setAutoscrolls(false);

        lblColor.setText("Color");

        lblTalla.setText("Talla");

        colorText.setAutoscrolls(false);
        colorText.setEnabled(false);

        lblTipo.setText("Tipo");

        lblUnidad.setText("Unidad de Medida");

        lblDescripcion.setText("Descripcion");

        nombreText.setEnabled(false);

        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        jToolBar1.setRollover(true);

        NuevoBtn.setText("Nuevo");
        NuevoBtn.setFocusable(false);
        NuevoBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NuevoBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NuevoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NuevoBtnMouseClicked(evt);
            }
        });
        jToolBar1.add(NuevoBtn);

        BuscarBtn.setText("Buscar");
        BuscarBtn.setFocusable(false);
        BuscarBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BuscarBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BuscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(BuscarBtn);

        EliminarBtn.setText("Eliminar");
        EliminarBtn.setFocusable(false);
        EliminarBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EliminarBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EliminarBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EliminarBtnMouseClicked(evt);
            }
        });
        jToolBar1.add(EliminarBtn);

        CancelarBtn.setText("Cancelar");
        CancelarBtn.setFocusable(false);
        CancelarBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CancelarBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(CancelarBtn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblColor)
                            .addComponent(lblTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Precio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(colorText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PrecioText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUnidad)
                                    .addComponent(lblTalla, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblStock))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbTalla, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StockText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPrecioSugerido, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 370, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SeleccionarInsumos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(guardarBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(colorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblColor)
                            .addComponent(lblTalla))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipo)
                            .addComponent(lblUnidad)
                            .addComponent(cmbUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PrecioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Precio)
                            .addComponent(lblStock)
                            .addComponent(StockText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4)
                .addComponent(lblPrecioSugerido, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SeleccionarInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarBtn)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void Estado(int estado) {
        switch (estado) {
            case ESTADO_HABILITAR: //habilitar campos
                nombreText.setEnabled(true);
                DescripcionText.setEnabled(true);
                colorText.setEnabled(true);
                PrecioText.setEnabled(true);
                StockText.setEnabled(true);
                CantidadInsumoText.setEnabled(true);
                guardarBtn.setEnabled(true);
                SelecInsumoBtn.setEnabled(true);
                cmbTalla.setEnabled(true);
                cmbTipo.setEnabled(true);
                cmbUnidad.setEnabled(true);

                cmbTipo.removeAllItems();
                ArrayList<TipoProductoG> listaProd = LogicaNegocio.listarTipoProducto();
                for (TipoProductoG tp : listaProd) {
                    cmbTipo.addItem(tp);
                }
                cmbUnidad.removeAllItems();
                ArrayList<UnidadDeMedida> listaUn = LogicaNegocio.listarUnidades();
                for (UnidadDeMedida u : listaUn) {
                    cmbUnidad.addItem(u);
                }
                cmbTalla.removeAllItems();
                cmbTalla.addItem("S");
                cmbTalla.addItem("M");
                cmbTalla.addItem("L");
                break;
            case ESTADO_DESHABILITAR: //Desabilitar campos
                nombreText.setEnabled(false);
                DescripcionText.setEnabled(false);
                colorText.setEnabled(false);
                PrecioText.setEnabled(false);
                StockText.setEnabled(false);
                CantidadInsumoText.setEnabled(false);
                InsertarInsumoBoton.setEnabled(false);
                EliminarBtn.setEnabled(false);
                SelecInsumoBtn.setEnabled(false);
                guardarBtn.setEnabled(false);
                cmbTalla.setEnabled(false);
                cmbTipo.setEnabled(false);
                cmbUnidad.setEnabled(false);
                SelecInsumoBtn.setEnabled(false);
                modificarInsBtn.setEnabled(false);
                eliminarInsBtn.setEnabled(false);
                break;
            case ESTADO_LIMPIAR: //Borrar todos los datos
                idText.setText(null);
                nombreText.setText(null);
                DescripcionText.setText(null);
                colorText.setText(null);
                PrecioText.setText(null);
                StockText.setText(null);
                CantidadInsumoText.setText(null);
                precio = 0;
                //borrar datos en lista de insumos del producto
                DefaultTableModel modelo = (DefaultTableModel) TablaInsumosxProducto.getModel();
                int n = modelo.getRowCount();
                for (int i = 0; i < n; i++) {
                    modelo.removeRow(0);
                }
                lblUnidadDeMedida.setText(null);
                lblPrecioSugerido.setText(null);
                lblInsumoSeleccionado.setText(null);
        }
    }

    private void ActualizarTablaDeInsumos() {
        Object[] filaP = new Object[3];
        DefaultTableModel modelo = (DefaultTableModel) TablaInsumosxProducto.getModel();
        int n = modelo.getRowCount();
        for (int i = 0; i < n; i++) {
            modelo.removeRow(i);
        }
        producto.setLista(LogicaNegocio.listarInsumoXProducto(producto.getId()));
        for (int i = 0; i < producto.getLista().size(); i++) {
            filaP[0] = producto.getLista().get(i).getIdInsumo();
            filaP[1] = producto.getLista().get(i).getDescripcion();
            filaP[2] = producto.getLista().get(i).getCantidad();
            modelo.addRow(filaP);
        }
    }
    private void NuevoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NuevoBtnMouseClicked
        Estado(ESTADO_HABILITAR);
        Estado(ESTADO_LIMPIAR);
        SelecInsumoBtn.setEnabled(true);
        producto = new Producto();
        accion = 0;
    }//GEN-LAST:event_NuevoBtnMouseClicked

    private void InsertarInsumoBotonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InsertarInsumoBotonMouseClicked
        if (SelecInsumoBtn.isEnabled()) {
            DefaultTableModel modelo = (DefaultTableModel) TablaInsumosxProducto.getModel();
            InsumoxProducto ip = new InsumoxProducto(seleccionInsumo.getId(),
                    seleccionInsumo.getDescripcion(),
                    Float.parseFloat(CantidadInsumoText.getText()));
            modelo.addRow(new Object[]{seleccionInsumo.getId(), seleccionInsumo.getDescripcion(), ip.getCantidad()});
            precio += seleccionInsumo.getPrecio() * ip.getCantidad();
            lblPrecioSugerido.setText("Precio Mínimo: " + precio);
        }
        InsertarInsumoBoton.setEnabled(false);
    }//GEN-LAST:event_InsertarInsumoBotonMouseClicked

    private void EliminarBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarBtnMouseClicked
        if (EliminarBtn.isEnabled()) {
            int op = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar este producto?", "Confirmacion", JOptionPane.YES_NO_OPTION);
            if (op == JOptionPane.YES_OPTION)
                LogicaNegocio.eliminarProducto(producto);
        }
        Estado(ESTADO_LIMPIAR);
        Estado(ESTADO_DESHABILITAR);
    }//GEN-LAST:event_EliminarBtnMouseClicked

    private void CancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarBtnActionPerformed
        Estado(ESTADO_LIMPIAR);
        Estado(ESTADO_DESHABILITAR);
    }//GEN-LAST:event_CancelarBtnActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        if (accion == 0 || accion == 1) {
            if (nombreText.getText().isEmpty()
                    && DescripcionText.getText().isEmpty()
                    && colorText.getText().isEmpty()
                    && PrecioText.getText().isEmpty()
                    && StockText.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe completar los campos vacíos");
                return;
            }
            producto.setNombre(nombreText.getText());
            producto.setDescripcion(DescripcionText.getText());
            producto.setColor(colorText.getText());
            producto.setTalla(cmbTalla.getSelectedItem().toString().charAt(0));
            producto.setTipo((TipoProductoG) cmbTipo.getSelectedItem());
            producto.setUnidad((UnidadDeMedida) cmbUnidad.getSelectedItem());
            producto.setPrecio(Double.parseDouble(PrecioText.getText()));
            producto.setStockActual(Double.parseDouble(StockText.getText()));
            //Agregar lista de insumos
            DefaultTableModel modelo = (DefaultTableModel) TablaInsumosxProducto.getModel();
            int n = modelo.getRowCount();
            for (int i = 0; i < n; i++) {
                InsumoxProducto ip = new InsumoxProducto((int) TablaInsumosxProducto.getValueAt(i, 0),
                        (String) TablaInsumosxProducto.getValueAt(i, 1),
                        (Double) TablaInsumosxProducto.getValueAt(i, 2));
                producto.getLista().add(ip);
            }
        }
        switch (accion) {
            case 0: //Nuevo (agregar)
                LogicaNegocio.agregarProducto(producto);
                idText.setText(Integer.toString(producto.getId()));
                JOptionPane.showMessageDialog(this, "El producto ha sido registrado con éxito\nCódigo: " + producto.getId());
                break;
            case 1: //Modificar
                producto.setId(Integer.parseInt(idText.getText()));
                LogicaNegocio.modificarProducto(producto);
                JOptionPane.showMessageDialog(this, "El producto ha sido modificado con éxito");
                Estado(ESTADO_LIMPIAR);
                break;
            default:
                break;
        }
        Estado(ESTADO_DESHABILITAR);
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void BuscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarBtnActionPerformed
        Estado(ESTADO_LIMPIAR);
        Estado(ESTADO_HABILITAR);
        BuscarProducto frm;
        frm = new BuscarProducto(null, true);
        frm.setVisible(true);
        producto = frm.getSeleccion();
        if (producto == null) {
            return;
        }
        //Copiar datos a la pantalla
        idText.setText(Integer.toString(producto.getId()));
        nombreText.setText(producto.getNombre());
        DescripcionText.setText(producto.getDescripcion());
        PrecioText.setText(Double.toString(producto.getPrecio()));
        StockText.setText(Double.toString(producto.getStockActual()));
        colorText.setText(producto.getColor());

        cmbTalla.setSelectedItem(Character.toString(producto.getTalla()));
        cmbTipo.setSelectedItem(producto.getTipo());
        cmbUnidad.setSelectedItem(producto.getUnidad());

        //insumos
        Object[] filaP = new Object[3];
        DefaultTableModel modeloP = (DefaultTableModel) TablaInsumosxProducto.getModel();
        for (int i = 0; i < producto.getLista().size(); i++) {
            filaP[0] = producto.getLista().get(i).getIdInsumo();
            filaP[1] = producto.getLista().get(i).getDescripcion();
            filaP[2] = producto.getLista().get(i).getCantidad();
            modeloP.addRow(filaP);
        }
        EliminarBtn.setEnabled(true);
        accion=1;
    }//GEN-LAST:event_BuscarBtnActionPerformed

    private void SelecInsumoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelecInsumoBtnMouseClicked
        if (SelecInsumoBtn.isEnabled()) {
            BuscarInsumo frm;
            try {
                frm = new BuscarInsumo(this, true);
                frm.setVisible(true);
                seleccionInsumo = frm.getInsumoSeleccionado();
                lblInsumoSeleccionado.setText("Producto Seleccionado:" + seleccionInsumo.getDescripcion());
                lblUnidadDeMedida.setText(seleccionInsumo.getUnidad().getNombre());
            } catch (SQLException ex) {
                Logger.getLogger(GestionarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SelecInsumoBtnMouseClicked

    private void modificarInsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarInsBtnActionPerformed
        if (modificarInsBtn.isEnabled()) {
            int index = TablaInsumosxProducto.getSelectedRow();
            if (index >= 0) {
                InsumoxProducto ip = new InsumoxProducto((int) TablaInsumosxProducto.getValueAt(index, 0),
                        (String) TablaInsumosxProducto.getValueAt(index, 1),
                        Double.parseDouble(CantidadInsumoText.getText()));
                LogicaNegocio.modificarInsumoXProducto(producto.getId(), ip);
            }
            ActualizarTablaDeInsumos();
        }
    }//GEN-LAST:event_modificarInsBtnActionPerformed

    private void eliminarInsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarInsBtnActionPerformed
        int index = TablaInsumosxProducto.getSelectedRow();
        LogicaNegocio.eliminarInsumoXProducto(producto.getId(), (int) TablaInsumosxProducto.getValueAt(index, 0));
    }//GEN-LAST:event_eliminarInsBtnActionPerformed

    private void PrecioTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PrecioTextKeyTyped
        String texto = PrecioText.getText();
        Pattern DECIMAL_VALIDO = Pattern.compile("\\d+(\\.\\d+)?");//^(\\d+\\.)?\\d+$
        Matcher matcher = DECIMAL_VALIDO.matcher(texto);
        if (!matcher.find()) {
            PrecioText.setForeground(java.awt.Color.RED);
        } else {
            PrecioText.setForeground(java.awt.Color.BLACK);
        }
    }//GEN-LAST:event_PrecioTextKeyTyped

    private void CantidadInsumoTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CantidadInsumoTextKeyPressed
        String texto = CantidadInsumoText.getText();
        Pattern DECIMAL_VALIDO = Pattern.compile("[0-9]+(\\.[0-9]+)?");//^(\\d+\\.)?\\d+$
        Matcher matcher = DECIMAL_VALIDO.matcher(texto);
        if (!matcher.find()) {
            CantidadInsumoText.setForeground(java.awt.Color.RED);
            if (seleccionInsumo != null) {
                InsertarInsumoBoton.setEnabled(false);
            }
        } else {
            CantidadInsumoText.setForeground(java.awt.Color.BLACK);
            InsertarInsumoBoton.setEnabled(true);
        }
    }//GEN-LAST:event_CantidadInsumoTextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GestionarProducto().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(GestionarProducto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarBtn;
    private javax.swing.JButton CancelarBtn;
    private javax.swing.JTextField CantidadInsumoText;
    private javax.swing.JTextField DescripcionText;
    private javax.swing.JButton EliminarBtn;
    private javax.swing.JButton InsertarInsumoBoton;
    private javax.swing.JButton NuevoBtn;
    private javax.swing.JLabel Precio;
    private javax.swing.JTextField PrecioText;
    private javax.swing.JButton SelecInsumoBtn;
    private javax.swing.JPanel SeleccionarInsumos;
    private javax.swing.JTextField StockText;
    private javax.swing.JTable TablaInsumosxProducto;
    private javax.swing.JComboBox<String> cmbTalla;
    private javax.swing.JComboBox<TipoProductoG> cmbTipo;
    private javax.swing.JComboBox<UnidadDeMedida> cmbUnidad;
    private javax.swing.JTextField colorText;
    private javax.swing.JButton eliminarInsBtn;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JTextField idText;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCantidadI;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblInsumoSeleccionado;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecioSugerido;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblTalla;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblUnidad;
    private javax.swing.JLabel lblUnidadDeMedida;
    private javax.swing.JButton modificarInsBtn;
    private javax.swing.JTextField nombreText;
    // End of variables declaration//GEN-END:variables

}
